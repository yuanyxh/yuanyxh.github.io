export default function Default() {
        return <div dangerouslySetInnerHTML={{ __html: `<pre class="shiki one-dark-pro" style="background-color:#282c34;color:#abb2bf" tabindex="0"><code><span class="line"><span style="color:#C678DD">import</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">isInteger</span><span style="color:#ABB2BF"> } </span><span style="color:#C678DD">from</span><span style="color:#98C379"> 'lodash-es'</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/** base64 字符映射 */</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#56B6C2"> =</span></span>
<span class="line"><span style="color:#98C379">  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@description</span><span style="color:#7F848E;font-style:italic"> 文本转字节</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E06C75;font-style:italic"> str</span><span style="color:#7F848E;font-style:italic"> 需要转为字节数组的文本</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@returns</span><span style="color:#7F848E;font-style:italic"> 字节数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#61AFEF"> toBytes</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">str</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#C678DD"> new</span><span style="color:#61AFEF"> TextEncoder</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">encode</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">str</span><span style="color:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@description</span><span style="color:#7F848E;font-style:italic"> 获取字符串在 base64 字符映射中的索引</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E06C75;font-style:italic"> str</span><span style="color:#7F848E;font-style:italic"> base64 字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@returns</span><span style="color:#7F848E;font-style:italic"> 字符索引数组</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#61AFEF"> toCodeAt</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">str</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> codeAt</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  for</span><span style="color:#ABB2BF"> (</span><span style="color:#C678DD">let</span><span style="color:#E06C75"> i</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">; </span><span style="color:#E06C75">i</span><span style="color:#56B6C2"> &#x3C;</span><span style="color:#E5C07B"> str</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">; </span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> index</span><span style="color:#56B6C2"> =</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">indexOf</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">str</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#ABB2BF">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75">    index</span><span style="color:#56B6C2"> >=</span><span style="color:#D19A66"> 0</span><span style="color:#56B6C2"> &#x26;&#x26;</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">codeAt</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">=</span><span style="color:#E06C75"> index</span><span style="color:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  return</span><span style="color:#E06C75"> codeAt</span><span style="color:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E06C75;font-style:italic"> str</span><span style="color:#7F848E;font-style:italic"> 需要 base64 编码的字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@returns</span><span style="color:#7F848E;font-style:italic"> base64 字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#61AFEF"> encode</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">str</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> bytes</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> toBytes</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">str</span><span style="color:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> i</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E06C75">    output</span><span style="color:#56B6C2"> =</span><span style="color:#98C379"> ''</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  while</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">i</span><span style="color:#56B6C2"> &#x3C;</span><span style="color:#E5C07B"> bytes</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> a</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> bytes</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">],</span></span>
<span class="line"><span style="color:#E5C07B">      b</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> bytes</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">||</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B">      c</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> bytes</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">] </span><span style="color:#56B6C2">||</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">    // 3 个 8 位 二进制组合为一个 24 位二进制</span></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> total</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">a</span><span style="color:#56B6C2"> &#x3C;&#x3C;</span><span style="color:#D19A66"> 16</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">+</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">b</span><span style="color:#56B6C2"> &#x3C;&#x3C;</span><span style="color:#D19A66"> 8</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">+</span><span style="color:#E06C75"> c</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75">    output</span><span style="color:#56B6C2"> +=</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">charAt</span><span style="color:#ABB2BF">(</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic">      /* 右移 18 位，截取 6 位 */</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> >>></span><span style="color:#D19A66"> 18</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;</span><span style="color:#D19A66"> 63</span></span>
<span class="line"><span style="color:#ABB2BF">    );</span></span>
<span class="line"><span style="color:#E06C75">    output</span><span style="color:#56B6C2"> +=</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">charAt</span><span style="color:#ABB2BF">(</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic">      /* 右移 12 位，截取 6 位 */</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> >>></span><span style="color:#D19A66"> 12</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;</span><span style="color:#D19A66"> 63</span></span>
<span class="line"><span style="color:#ABB2BF">    );</span></span>
<span class="line"><span style="color:#E06C75">    output</span><span style="color:#56B6C2"> +=</span></span>
<span class="line"><span style="color:#E06C75">      b</span><span style="color:#56B6C2"> !==</span><span style="color:#D19A66"> 0</span></span>
<span class="line"><span style="color:#C678DD">        ?</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">charAt</span><span style="color:#ABB2BF">(</span><span style="color:#7F848E;font-style:italic">/* 右移 6 位，截取 6 位 */</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> >>></span><span style="color:#D19A66"> 6</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;</span><span style="color:#D19A66"> 63</span><span style="color:#ABB2BF">)</span></span>
<span class="line"><span style="color:#C678DD">        :</span><span style="color:#98C379"> '='</span><span style="color:#ABB2BF">;</span></span>
<span class="line"><span style="color:#E06C75">    output</span><span style="color:#56B6C2"> +=</span><span style="color:#E06C75"> c</span><span style="color:#56B6C2"> !==</span><span style="color:#D19A66"> 0</span><span style="color:#C678DD"> ?</span><span style="color:#E5C07B"> CHARACTER_SET</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">charAt</span><span style="color:#ABB2BF">(</span><span style="color:#7F848E;font-style:italic">/* 截取 6 位 */</span><span style="color:#E06C75"> total</span><span style="color:#56B6C2"> &#x26;</span><span style="color:#D19A66"> 63</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">:</span><span style="color:#98C379"> '='</span><span style="color:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  return</span><span style="color:#E06C75"> output</span><span style="color:#ABB2BF">;</span></span>
<span class="line"><span style="color:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@description</span><span style="color:#7F848E;font-style:italic"> 解码 base64 字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@param</span><span style="color:#E06C75;font-style:italic"> str</span><span style="color:#7F848E;font-style:italic"> 需要解码的 base64 字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> * </span><span style="color:#C678DD;font-style:italic">@returns</span><span style="color:#7F848E;font-style:italic"> 解码后的字符串</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic"> */</span></span>
<span class="line"><span style="color:#C678DD">const</span><span style="color:#61AFEF"> decode</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75;font-style:italic">str</span><span style="color:#ABB2BF">: </span><span style="color:#E5C07B">string</span><span style="color:#ABB2BF">) </span><span style="color:#C678DD">=></span><span style="color:#ABB2BF"> {</span></span>
<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> codeAt</span><span style="color:#56B6C2"> =</span><span style="color:#61AFEF"> toCodeAt</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">str</span><span style="color:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  let</span><span style="color:#E06C75"> i</span><span style="color:#56B6C2"> =</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  const</span><span style="color:#E5C07B"> original</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> [];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  while</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">i</span><span style="color:#56B6C2"> &#x3C;</span><span style="color:#E5C07B"> codeAt</span><span style="color:#ABB2BF">.</span><span style="color:#E06C75">length</span><span style="color:#ABB2BF">) {</span></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> a</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> codeAt</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">],</span></span>
<span class="line"><span style="color:#E5C07B">      b</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> codeAt</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">],</span></span>
<span class="line"><span style="color:#E5C07B">      c</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> codeAt</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">],</span></span>
<span class="line"><span style="color:#E5C07B">      d</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> codeAt</span><span style="color:#ABB2BF">[</span><span style="color:#E06C75">i</span><span style="color:#56B6C2">++</span><span style="color:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> n_a</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> a</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B">      n_b</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> b</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B">      n_c</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> c</span><span style="color:#56B6C2"> ||</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">,</span></span>
<span class="line"><span style="color:#E5C07B">      n_d</span><span style="color:#56B6C2"> =</span><span style="color:#E06C75"> d</span><span style="color:#56B6C2"> ||</span><span style="color:#D19A66"> 0</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">    const</span><span style="color:#E5C07B"> total</span><span style="color:#56B6C2"> =</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">n_a</span><span style="color:#56B6C2"> &#x3C;&#x3C;</span><span style="color:#D19A66"> 18</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">+</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">n_b</span><span style="color:#56B6C2"> &#x3C;&#x3C;</span><span style="color:#D19A66"> 12</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">+</span><span style="color:#ABB2BF"> (</span><span style="color:#E06C75">n_c</span><span style="color:#56B6C2"> &#x3C;&#x3C;</span><span style="color:#D19A66"> 6</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">+</span><span style="color:#E06C75"> n_d</span><span style="color:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B">    original</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">push</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> >></span><span style="color:#D19A66"> 16</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;</span><span style="color:#D19A66"> 255</span><span style="color:#ABB2BF">);</span></span>
<span class="line"><span style="color:#61AFEF">    isInteger</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">c</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;&#x26;</span><span style="color:#E5C07B"> original</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">push</span><span style="color:#ABB2BF">((</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> >></span><span style="color:#D19A66"> 8</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;</span><span style="color:#D19A66"> 255</span><span style="color:#ABB2BF">);</span></span>
<span class="line"><span style="color:#61AFEF">    isInteger</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">d</span><span style="color:#ABB2BF">) </span><span style="color:#56B6C2">&#x26;&#x26;</span><span style="color:#E5C07B"> original</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">push</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">total</span><span style="color:#56B6C2"> &#x26;</span><span style="color:#D19A66"> 255</span><span style="color:#ABB2BF">);</span></span>
<span class="line"><span style="color:#ABB2BF">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">  return</span><span style="color:#E5C07B"> window</span><span style="color:#ABB2BF">.</span><span style="color:#61AFEF">decodeURIComponent</span><span style="color:#ABB2BF">(</span></span>
<span class="line"><span style="color:#C678DD">    new</span><span style="color:#61AFEF"> TextDecoder</span><span style="color:#ABB2BF">().</span><span style="color:#61AFEF">decode</span><span style="color:#ABB2BF">(</span><span style="color:#C678DD">new</span><span style="color:#61AFEF"> Uint8Array</span><span style="color:#ABB2BF">(</span><span style="color:#E06C75">original</span><span style="color:#ABB2BF">))</span></span>
<span class="line"><span style="color:#ABB2BF">  );</span></span>
<span class="line"><span style="color:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD">export</span><span style="color:#C678DD"> default</span><span style="color:#ABB2BF"> { </span><span style="color:#E06C75">encode</span><span style="color:#ABB2BF">, </span><span style="color:#E06C75">decode</span><span style="color:#ABB2BF"> };</span></span>
<span class="line"></span></code></pre>` }}></div>
      }